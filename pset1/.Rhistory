View(models)
models_costIV <- feols(rev_share ~ prom | csw0(brand, brand_by_store) |
price ~ cost,
data = product_data)
models_hausIV <- feols(rev_share ~ prom | csw0(brand, brand_by_store) |
price ~ haus_iv,
data = product_data)
View(models_hausIV)
modelsummary(models_noIV)
models_noIV <- feols(rev_share ~ price + prom | csw0(brand, brand_by_store),
data = product_data)
models_costIV <- feols(rev_share ~ prom | csw0(brand, brand_by_store) |
price ~ cost,
data = product_data)
models_hausIV <- feols(rev_share ~ prom | csw0(brand, brand_by_store) |
price ~ haus_iv,
data = product_data)
modelsummary(models_noIV)
modelsummary(models_noIV, models_costIV)
modelsummary(models_noIV, output = "model_noIv.tex")
modelsummary(models_noIV,
output = "model_noIv.tex",
statistic = NULL)
modelsummary(models_noIV,
output = "model_noIv.tex",
statistic = NULL,
stars = TRUE)
modelsummary(models_noIV,
output = "model_noIv.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept")
modelsummary(models_noIV,
output = "model_noIv.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC')
modelsummary(models_noIV,
output = "model_noIv.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE')
models <- list(unlist(models_noIV), unlist(models_costIV), unlist(models_hausIV))
View(models)
models <- list(models_noIV[[1]],
models_noIV[[2]],
models_noIV[[3]],
models_costIV[[1]],
models_costIV[[2]],
models_costIV[[3]],
models_hausIV[[1]],
models_hausIV[[2]],
models_hausIV[[3]])
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE')
install.packages("kableextra")
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE') %>%
add_header_above(c(" " = 1, "No IV" = 3, "Cost IV" = 3, "Hausman IV" = 3))
library(tidyverse)
library(fixest)
library(modelsummary)
library(janitor)
library(kableExtra)
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE') %>%
add_header_above(c(" " = 1, "No IV" = 3, "Cost IV" = 3, "Hausman IV" = 3))
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE}Std.Errors') %>%
add_header_above(c(" " = 1, "No IV" = 3, "Cost IV" = 3, "Hausman IV" = 3))
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE|Std.Errors') %>%
add_header_above(c(" " = 1, "No IV" = 3, "Cost IV" = 3, "Hausman IV" = 3))
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = 'DF|Deviance|R2|AIC|BIC|RMSE|Std.Errors',
add_header_above(c(" " = 1, "No IV" = 3, "Cost IV" = 3, "Hausman IV" = 3)))
View(models_noIV)
models_noIV[["1"]]
summary(models_noIV[[1]])
models_noIV$`1`$coefficients
models_noIV$`1`$coefficients$price
models_noIV$`1`$coefficients[[2]]
alpha = models_noIV %>% map( ~ .x %>% .$`1`$coefficients[[2]])
alpha = models_noIV %>% map( ~ .x$`1`$coefficients[[2]])
View(alpha)
alpha = models_noIV %>% map( ~ .x$coefficients[[2]])
View(alpha)
View(product_data)
# getting mean price and market-shares (unweighted) by product
mean_price_share <- product_data %>%
group_by(product_brand) %>%
summarise(
rev_share = mean(rev_share),
price = mean(price)
)
View(mean_price_share)
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
)
View(own_price_elasticity)
?left_join
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
) %>%
left_join(product_data %>%
select(product_brand, brand, size))
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
)
View(own_price_elasticity)
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
) %>%
left_join(product_data %>%
select(product_brand, brand, size))
View(own_price_elasticity)
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
) %>%
inner_join(product_data %>%
select(product_brand, brand, size))
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
) %>%
left_join(product_data %>%
select(product_brand, brand, size) %>%
unique())
View(own_price_elasticity)
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]]*price*(1-rev_share),
model_2 = -alpha[[2]]*price*(1-rev_share),
model_3 = -alpha[[3]]*price*(1-rev_share)
) %>%
left_join(product_data %>%
select(product_brand, brand, size) %>%
unique()) %>%
relocate(brand, size) %>%
select(-product_brand)
View(own_price_elasticity)
library(tidyverse)
library(fixest)
library(modelsummary)
library(janitor)
library(kableExtra)
# load data
OTC_instruments <- read.csv("OTCDataInstruments.csv", sep = "")
OTC_headache <- read.delim("~/GitHub/PhD_IO/pset1/OTC_Headache_upd.csv", header = TRUE)
store_dem <- read.csv("store_demographics.csv")
View(OTC_headache)
View(store_dem)
View(OTC_instruments)
View(OTC_headache)
### IO problem set - warmup questions
library(tidyverse)
library(fixest)
library(modelsummary)
library(janitor)
library(kableExtra)
# load data
OTC_instruments <- read.csv("OTCDataInstruments.csv", sep = "")
OTC_headache <- read.delim("~/GitHub/PhD_IO/pset1/OTC_Headache_upd.csv", header = TRUE)
store_dem <- read.csv("store_demographics.csv")
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names()
View(product_data)
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names() %>%
mutate(
store = as.factor(store),
product_brand = as.numeric(product_brand)
) %>%
# categorizing products, I assume 1-11 are in the same order as the table in
# question, and I've bundled all store brand objects as a single brand
mutate(
brand = case_when(
product_brand %in% 1:3 ~ "Tylenol",
product_brand %in% 4:6 ~ "Advil",
product_brand %in% 7:9 ~ "Bayer",
product_brand %in% 10:11 ~ "Store Brand"
) %>% as.factor(.),
size = case_when(
product_brand %in% c(1, 4, 7) ~ 25,
product_brand %in% c(2, 5, 8, 10) ~ 50,
product_brand %in% c(3, 6, 9, 11) ~ 100
) %>% as.factor(.)
)
View(product_data)
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names() %>%
mutate(
store = as.factor(store),
product_brand = as.numeric(product_brand)
) %>%
# categorizing products, I assume 1-11 are in the same order as the table in
# question, and I've bundled all store brand objects as a single brand
mutate(
brand = case_when(
product_brand %in% 1:3 ~ "Tylenol",
product_brand %in% 4:6 ~ "Advil",
product_brand %in% 7:9 ~ "Bayer",
product_brand %in% 10:11 ~ "Store Brand"
) %>% as.factor(.),
size = case_when(
product_brand %in% c(1, 4, 7) ~ 25,
product_brand %in% c(2, 5, 8, 10) ~ 50,
product_brand %in% c(3, 6, 9, 11) ~ 100
)
) %>%
# converting to total amounts of pills sold
mutate(
sales_pills = size*sales
)
View(product_data)
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names() %>%
mutate(
store = as.factor(store),
product_brand = as.numeric(product_brand)
) %>%
# categorizing products, I assume 1-11 are in the same order as the table in
# question, and I've bundled all store brand objects as a single brand
mutate(
brand = case_when(
product_brand %in% 1:3 ~ "Tylenol",
product_brand %in% 4:6 ~ "Advil",
product_brand %in% 7:9 ~ "Bayer",
product_brand %in% 10:11 ~ "Store Brand"
) %>% as.factor(.),
size = case_when(
product_brand %in% c(1, 4, 7) ~ 25,
product_brand %in% c(2, 5, 8, 10) ~ 50,
product_brand %in% c(3, 6, 9, 11) ~ 100
)
) %>%
# converting to total amounts of pills sold
mutate(
sales_pills = size*sales
)
group_by(week, store) %>%
mutate(
mkt_share = sales_pills / sum(sales_pills)
)
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names() %>%
mutate(
store = as.factor(store),
product_brand = as.numeric(product_brand)
) %>%
# categorizing products, I assume 1-11 are in the same order as the table in
# question, and I've bundled all store brand objects as a single brand
mutate(
brand = case_when(
product_brand %in% 1:3 ~ "Tylenol",
product_brand %in% 4:6 ~ "Advil",
product_brand %in% 7:9 ~ "Bayer",
product_brand %in% 10:11 ~ "Store Brand"
) %>% as.factor(.),
size = case_when(
product_brand %in% c(1, 4, 7) ~ 25,
product_brand %in% c(2, 5, 8, 10) ~ 50,
product_brand %in% c(3, 6, 9, 11) ~ 100
)
) %>%
# converting to total amounts of pills sold
mutate(
sales_pills = size*sales
) %>%
group_by(week, store) %>%
mutate(
mkt_share = sales_pills / sum(sales_pills)
) #%>%
View(product_data)
:sum
?sum
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names() %>%
mutate(
store = as.factor(store),
product_brand = as.numeric(product_brand)
) %>%
# categorizing products, I assume 1-11 are in the same order as the table in
# question, and I've bundled all store brand objects as a single brand
mutate(
brand = case_when(
product_brand %in% 1:3 ~ "Tylenol",
product_brand %in% 4:6 ~ "Advil",
product_brand %in% 7:9 ~ "Bayer",
product_brand %in% 10:11 ~ "Store Brand"
) %>% as.factor(.),
size = case_when(
product_brand %in% c(1, 4, 7) ~ 25,
product_brand %in% c(2, 5, 8, 10) ~ 50,
product_brand %in% c(3, 6, 9, 11) ~ 100
)
) %>%
# converting to total amounts of pills sold
mutate(
sales_pills = size*sales
) %>%
group_by(week, store) %>%
mutate(
mkt_share = sales_pills / sum(sales_pills)
) %>%
# calculating market share of the outside good - ie store brand products
mutate(
share_outside = sum(mkt_share*(brand == "Store Brand"))
)
View(product_data)
0.01176471+0.18823529
styler:::style_selection()
group_by(week) %>%
mutate(
haus_iv = (n() * mean(price) - price) / (n() - 1)
) %>%
ungroup() %>%
# creating brand-by-store dummy, this will make it easier than doing in estimation itself
mutate(
brand_by_store = paste(brand, "_", store)
) %>%
# remove outside good of the sample
filter(brand != "Store Brand")
styler:::style_selection()
product_data <- OTC_headache %>%
pivot_longer(sales_1:prom_11,
names_to = c(".value", "product-brand"),
names_pattern = "([A-Za-z]+)[^0-9]+([0-9]+)"
) %>%
left_join(store_dem, by = c("store" = "STORE")) %>%
clean_names() %>%
mutate(
store = as.factor(store),
product_brand = as.numeric(product_brand)
) %>%
# categorizing products, I assume 1-11 are in the same order as the table in
# question, and I've bundled all store brand objects as a single brand
mutate(
brand = case_when(
product_brand %in% 1:3 ~ "Tylenol",
product_brand %in% 4:6 ~ "Advil",
product_brand %in% 7:9 ~ "Bayer",
product_brand %in% 10:11 ~ "Store Brand"
) %>% as.factor(.),
size = case_when(
product_brand %in% c(1, 4, 7) ~ 25,
product_brand %in% c(2, 5, 8, 10) ~ 50,
product_brand %in% c(3, 6, 9, 11) ~ 100
)
) %>%
# converting to total amounts of pills sold
mutate(
sales_pills = size * sales
) %>%
group_by(week, store) %>%
mutate(
mkt_share = sales_pills / sum(sales_pills)
) %>%
# calculating market share of the outside good - ie store brand products
mutate(
share_outside = sum(mkt_share * (brand == "Store Brand")),
delta_log_share = log(mkt_share) - log(share_outside)
) %>%
group_by(week) %>%
mutate(
haus_iv = (n() * mean(price) - price) / (n() - 1)
) %>%
ungroup() %>%
# creating brand-by-store dummy, this will make it easier than doing in estimation itself
mutate(
brand_by_store = paste(brand, "_", store)
) %>%
# remove outside good of the sample
filter(brand != "Store Brand")
View(product_data)
models_noIV <- feols(delta_log_share ~ price + prom | csw0(brand, brand_by_store),
data = product_data
)
models_costIV <- feols(delta_log_share ~ prom | csw0(brand, brand_by_store) |
price ~ cost,
data = product_data
)
models_hausIV <- feols(delta_log_share ~ prom | csw0(brand, brand_by_store) |
price ~ haus_iv,
data = product_data
)
models <- list(
models_noIV[[1]],
models_noIV[[2]],
models_noIV[[3]],
models_costIV[[1]],
models_costIV[[2]],
models_costIV[[3]],
models_hausIV[[1]],
models_hausIV[[2]],
models_hausIV[[3]]
)
modelsummary(models,
output = "models.tex",
statistic = NULL,
stars = TRUE,
coef_omit = "Intercept",
gof_omit = "DF|Deviance|R2|AIC|BIC|RMSE|Std.Errors",
add_header_above(c(" " = 1, "No IV" = 3, "Cost IV" = 3, "Hausman IV" = 3))
)
alpha <- models_noIV %>% map(~ .x$coefficients[[2]])
# getting mean price and market-shares (unweighted) by product
mean_price_share <- product_data %>%
group_by(product_brand) %>%
summarise(
mkt_share = mean(mkt_share),
price = mean(price)
)
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]] * price * (1 - rev_share),
model_2 = -alpha[[2]] * price * (1 - rev_share),
model_3 = -alpha[[3]] * price * (1 - rev_share)
) %>%
left_join(product_data %>%
select(product_brand, brand, size) %>%
unique()) %>%
relocate(brand, size) %>%
select(-product_brand)
own_price_elasticity <- mean_price_share %>%
mutate(
model_1 = -alpha[[1]] * price * (1 - mkt_share),
model_2 = -alpha[[2]] * price * (1 - mkt_share),
model_3 = -alpha[[3]] * price * (1 - mkt_share)
) %>%
left_join(product_data %>%
select(product_brand, brand, size) %>%
unique()) %>%
relocate(brand, size) %>%
select(-product_brand)
View(own_price_elasticity)
